#!/usr/bin/env python3
# pylint: disable=print-used

import os
import ast
import subprocess
from datetime import datetime

import click
import yaml


@click.command()
def main():
    version = datetime.now().strftime("%y%m.%d.0")
    with open("odoo/local-src/custom_all/__manifest__.py") as f:
        data = ast.literal_eval(f.read())
    last_version = data["version"]

    # increment last digit if needed
    if last_version >= version:
        year_month, day, inc = last_version.split(".")
        inc = str(int(inc) + 1)
        version = ".".join([year_month, day, inc])

    # increment modules versions
    for module_name in os.listdir("odoo/local-src"):
        module_path = f"odoo/local-src/{module_name}"
        manifest_path = f"{module_path}/__manifest__.py"
        # Check if it's an odoo module
        if os.path.exists(manifest_path):
            update_version = False
            # in case of pending migration script increment it
            if os.path.exists(f"{module_path}/migrations/0.0.0"):
                subprocess.run((
                    f"git mv {module_path}/migrations/0.0.0 "
                    f"{module_path}/migrations/{version}"
                    ),shell=True, check=True)
                update_version = True
            if update_version or module_name == "custom_all":
                print(f"Update version of {module_name} to {version}")
                with open(manifest_path) as f:
                    raw_data = f.read()
                    data = ast.literal_eval(raw_data)
                with open(manifest_path, "w") as f:
                    raw_data = raw_data.replace(data["version"], version)
                    f.write(raw_data)
                subprocess.run(f"git add {manifest_path}", shell=True, check=True)

    subprocess.run(f"git commit -m'Bump version {version}'", shell=True, check=True)
    subprocess.run(f"git tag {version}", shell=True, check=True)
    subprocess.run(f"git push origin --tag", shell=True, check=True)


if __name__ == "__main__":
    main()
