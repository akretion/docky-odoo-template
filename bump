#!/usr/bin/env python3
# pylint: disable=print-used

import os
import subprocess
from datetime import datetime

import click
import yaml


@click.command()
@click.option("--commit-branch", type=str, help="Commit the bump with git")
def main(commit_branch):
    datetime.now()
    version = datetime.now().strftime("%y.%m.%d0")

    with open("odoo/migration.yml", "r") as f:
        config = yaml.safe_load(f)

    versions = [x["version"] for x in config["migration"]["versions"]]

    # Increment last version digit if needed
    idx = 1
    while version in versions:
        version = f"{version[0:8]}{idx}"
        idx += 1

    pre_migration = []
    post_migration = []

    if os.path.exists("odoo/script/current"):
        subprocess.run(
            f"git mv odoo/script/current odoo/script/{version}", shell=True, check=True
        )
        for filename in os.listdir(f"odoo/script/{version}"):
            filepath = f"/odoo/script/{version}/{filename}"
            if filename.startswith("pre"):
                pre_migration.append(filepath)
            elif filename.startswith("post"):
                post_migration.append(filepath)
    elif not commit_branch:
        print("Current is empty do nothing")
        return

    todo = pre_migration + ["click-odoo-update"] + post_migration

    config["migration"]["versions"].append(
        {
            "version": version,
            "modes": {
                "prod": {
                    "operations": {
                        "pre": todo,
                    }
                }
            },
        }
    )
    # Only keep the 10 last
    config["migration"]["versions"] = config["migration"]["versions"][-10:]
    with open("odoo/migration.yml", "w") as f:
        yaml.dump(config, f, sort_keys=False)

    if commit_branch:
        subprocess.run("git add odoo/migration.yml", shell=True, check=True)
        subprocess.run(f"git commit -m'Bump version {version}'", shell=True, check=True)
        subprocess.run(f"git tag {version}", shell=True, check=True)
        subprocess.run(
            f"git push origin HEAD:{commit_branch} --tag", shell=True, check=True
        )


if __name__ == "__main__":
    main()
