services:
  odoo:
    build:
      context: ./odoo
      target: prod
    image: "${BUILD_NAME}"
    environment:
      ODOO_BASE_URL: https://${DOMAIN}
      ODOO_REPORT_URL: http://${ENV}-${BUILD_NAME}:8069
      #SENTRY: True TODO FIXME
      PGSSLMODE: require
      PGDATABASE: $DB_NAME
      PGHOST: $PGHOST
      PGPASSWORD: $PGPASSWORD
      PGUSER: $PGUSER
      # TODO discuss if we want/need to have a "ci" running env
      RUNNING_ENV: preprod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=false"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-long.rule=Host(`${DOMAIN}`) &&
        PathPrefix(`/longpolling/`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-long.tls=false"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}odoo"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-long.service=${COMPOSE_PROJECT_NAME}odoo_long"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}odoo.loadbalancer.server.port=8069"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}odoo_long.loadbalancer.server.port=8072"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}middle.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=${COMPOSE_PROJECT_NAME}middle"
    networks:
      - traefik
    volumes:
      - type: tmpfs
        target: /data/odoo
      - type: volume
        source: filestore
        target: /data/odoo/filestore
      - type: bind
        source: ./shared
        target: /shared
volumes:
  filestore:
networks:
  traefik:
    external: true
version: "3.7"
